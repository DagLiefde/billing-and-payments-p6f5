name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-auth:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'
      - name: Build auth service
        run: |
          ./gradlew clean build -x test
      - name: Test auth service
        run: |
          ./gradlew test
      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build & push image (auth)
        run: |
          IMAGE=ghcr.io/${{ github.repository_owner }}/user-auth-service:latest
          docker build -t $IMAGE .
          docker push $IMAGE

  build-invoice:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: services/invoice-service
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'
      - name: Build
        run: ./gradlew clean build -x test
      - name: Test
        run: ./gradlew test
      - name: SonarCloud Scan (invoice)
        uses: SonarSource/sonarcloud-github-action@v2
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          args: >
            -Dsonar.projectKey=${{ secrets.SONAR_PROJECT_KEY_INVOICE }}
            -Dsonar.organization=${{ secrets.SONAR_ORG }}
            -Dsonar.java.binaries=build
      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build & push image (invoice)
        run: |
          IMAGE=ghcr.io/${{ github.repository_owner }}/invoice-service:latest
          docker build -t $IMAGE .
          docker push $IMAGE

  build-shipment:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: services/shipment-service
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'
      - name: Build
        run: ./gradlew clean build -x test
      - name: Test
        run: ./gradlew test
      - name: SonarCloud Scan (shipment)
        uses: SonarSource/sonarcloud-github-action@v2
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          args: >
            -Dsonar.projectKey=${{ secrets.SONAR_PROJECT_KEY_SHIPMENT }}
            -Dsonar.organization=${{ secrets.SONAR_ORG }}
            -Dsonar.java.binaries=build
      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build & push image (shipment)
        run: |
          IMAGE=ghcr.io/${{ github.repository_owner }}/shipment-service:latest
          docker build -t $IMAGE .
          docker push $IMAGE

  build-document:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: services/document-service
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'
      - name: Build
        run: ./gradlew clean build -x test
      - name: Test
        run: ./gradlew test
      - name: SonarCloud Scan (document)
        uses: SonarSource/sonarcloud-github-action@v2
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          args: >
            -Dsonar.projectKey=${{ secrets.SONAR_PROJECT_KEY_DOCUMENT }}
            -Dsonar.organization=${{ secrets.SONAR_ORG }}
            -Dsonar.java.binaries=build
      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build & push image (document)
        run: |
          IMAGE=ghcr.io/${{ github.repository_owner }}/document-service:latest
          docker build -t $IMAGE .
          docker push $IMAGE


